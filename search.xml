<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python语法的简单记录</title>
      <link href="/2020/04/29/python-yu-fa-de-jian-dan-ji-lu/"/>
      <url>/2020/04/29/python-yu-fa-de-jian-dan-ji-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="print"><a href="#print" class="headerlink" title="print"></a>print</h1><p>print(“内容”)<br>用来输出值</p><h1 id="if···else···"><a href="#if···else···" class="headerlink" title="if···else···"></a>if···else···</h1><p>if (条件):<br>  (条件成立执行)<br>esle: (当条件成立时执行)</p><h1 id="转意符号"><a href="#转意符号" class="headerlink" title="\ 转意符号"></a>\ 转意符号</h1><p>用来转变字符所表示的意思如<br>‘I’s my’ 就需要写成 ‘I's my’</p><h1 id="r原始字符"><a href="#r原始字符" class="headerlink" title="r原始字符"></a>r原始字符</h1><p>注!不能以\结尾</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 语法与作用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 双线部署报错</title>
      <link href="/2020/04/20/hexo-shuang-xian-bu-shu-bao-cuo/"/>
      <url>/2020/04/20/hexo-shuang-xian-bu-shu-bao-cuo/</url>
      
        <content type="html"><![CDATA[<p>github虽然好用但是对于国内的人来说访问速度实在太慢我就在国内coding也部署了一份。但在部署时遇到了一个问题，那就是无论怎么弄只能上传其中一个地方无法实现双线部署，并且代码报错为 error: spawn failed。解决方法很简单就是看看你的github和coding的ssh秘钥是不是一样的，当我重新设置完两个地方的ssh时我的问题就解决了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 问题解决方法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>泰拉瑞亚mod整合</title>
      <link href="/2020/04/13/tai-la-rui-ya-mod-zheng-he/"/>
      <url>/2020/04/13/tai-la-rui-ya-mod-zheng-he/</url>
      
        <content type="html"><![CDATA[<h2>整合包介绍</h2>本整合包包含了灾厄(Calamity)，瑟银(Thorium)等众多mod，mod数量已经超出普通tmodloader的内存限制因此需要@Rartrin和@Dradonhunter11大佬的tmodloader 64bt版本，该整合包由我自己整理并有少数汉化，还进行了测试单人游玩当前没有大问题，多人模式还待测试。<h3>游戏截图</h3><img src="https://ww1.yunjiexi.club/2020/04/20/4jQna.png" alt="4jQna.png" border="0"><img src="https://ww1.yunjiexi.club/2020/04/20/4jEsc.png" alt="4jEsc.png" border="0"><img src="https://ww1.yunjiexi.club/2020/04/20/4jJUt.png" alt="4jJUt.png" border="0"><img src="https://ww1.yunjiexi.club/2020/04/20/4j4j0.png" alt="4j4j0.png" border="0"><img src="https://ww1.yunjiexi.club/2020/04/20/4jUYV.png" alt="4jUYV.png" border="0"><img src="https://ww1.yunjiexi.club/2020/04/20/4jyiX.png" alt="4jyiX.png" border="0"><h3>注意!!!</h3>内存至少8g,低于8g不敢确定能否流程游玩。<p><font color="red" size="+2">泰拉瑞亚需要正版！！<br>泰拉瑞亚需要正版！！<br>泰拉瑞亚需要正版！！<br></font></p><h2>当前bug</h2>(1) 有重复的一两个NPC且有个卖召唤物的npc不卖召唤物（待解决）<p>(2) 硫磺海可能会直接流到深渊，但并不影响mod剧情的推进。</p><h2>下载链接</h2>tmodloader64bt原贴：<p><a href="https://forums.terraria.org/index.php?threads/1-3-tmodloader-fna-32bit-64bit-branch-of-tml.75644/" target="_blank" rel="noopener">https://forums.terraria.org/index.php?threads/1-3-tmodloader-fna-32bit-64bit-branch-of-tml.75644/</a></p><p>mod整合包：<a href="https://pan.baidu.com/s/1vuygMmykO1ckpivTKyGTZw" target="_blank" rel="noopener">https://pan.baidu.com/s/1vuygMmykO1ckpivTKyGTZw</a> 提取码：zcm7</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 游戏整合包 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> mod </tag>
            
            <tag> 整合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数字媒体</title>
      <link href="/2019/12/12/shu-zi-mei-ti/"/>
      <url>/2019/12/12/shu-zi-mei-ti/</url>
      
        <content type="html"><![CDATA[<p>快要临近高考了专业复习也到最紧张的时刻，我把书上的重要的内容和自己的小见解记录到博客上已方便自己以后可以方便浏览，就当做记笔记了。</p><h1>基础知识</h1><p>媒体是指信息表示和传播的载体。</p><h2>数字媒体的概念</h2><h3>媒体</h3><table><thead><tr><th>媒体类别</th><th>概念和简述</th></tr></thead><tbody><tr><td>感觉媒体</td><td>直接用于人的感官（人能直接看到的或感觉到的)</td></tr><tr><td>表示媒体</td><td>指各种编码比如汉字输入法编码，字符的编码，图像编码等</td></tr><tr><td>表现媒体</td><td>是人与计算机之间的界面一般指输入输出设备</td></tr><tr><td>存储媒体</td><td>用来存放表示媒体，如内存条，u盘等</td></tr><tr><td>传输媒体</td><td>是将媒体从一处传送到另一处的物理载体</td></tr></tbody></table><h3>多媒体</h3><p>   媒体从形式上又分为文字、声音、图形、图像、动画和视频等</p><h3>数字媒体</h3><p>  数字媒体是指以二进制数据的形式获取、记录、处理和传播信息的载体，其传播形式采用数字化。</p><h2>数字媒体技术</h2><p>  数字媒体技术的关键技术包括数据压缩技术、专用芯片、大容量存储器、网络通信技术和流媒体技术</p><table><thead><tr><th>技术类型</th><th>概念和简述</th></tr></thead><tbody><tr><td>数据压缩技术</td><td>用来减少数据对空间占用</td></tr><tr><td>专用芯片</td><td>用来处理大量的数字信号，压缩和解压缩的数字信号处理芯片（DSP）</td></tr><tr><td>大容量存储器</td><td>用来存储大量的数据</td></tr><tr><td>网络通信技术</td><td>要充分发挥数字媒体技术，还要依靠网络技术和通信技术</td></tr><tr><td>流媒体技术</td><td>指的是在internet上采用流式传输技术的连续媒体。</td></tr></tbody></table><ul><li><p>流媒体常见的文件格式有SWF，ASF，WMV，RM，FLV，MOV</p><h3>数字化图像技术</h3>(1)矢量图矢量图使用直线和曲线来描述图形其特点是存储量小，改变大小时不会失真，方便填充颜色，但是不能表现色彩层次丰富的逼真图像效果<p>(2)图像<br>图像是一种位图、点阵图像。位图是用像素点来描述一幅图像，它的基本元素是像素或像素点。位图图像文件一般存储量大，适用于表现含有大量细节的画面。其中BMP文件就是位图图像格式的文件，于矢量图相比位图房大时放大的是每个像素点，所以会失真。</p><ul><li>描述图像的参数主要有分辨率、颜色深度和存储容量。</li></ul><p>①分辨率：分辨率是指图像在水平方向与垂直方向的像素点个数。<br>②颜色深度： 颜色深度又称灰度级。当颜色深度为n时颜色总数为2的n次。<br>③存储容量：图像数据容量的计算公式是：水平像素点数 X 垂直像素点数 X 颜色深度 / 8(B) 次计算公式算出来的是 “字节” 如要换算成兆则要除以两个1024换算成GB就除以三个1024.</p><h3>数据压缩技术</h3>(1) 数据冗余在不影响或少影响媒体质量前提下尽量设法减少媒体数据中的数据量。<p>①空间冗余：静态图像在数字化处理生成点阵图后，很多的相邻的像素有很多是一样或者十分接近的这部分可以进行帧内压缩</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 高考复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高考复习 </tag>
            
            <tag> 数字媒体 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Access数据库篇</title>
      <link href="/2019/12/10/access-shu-ju-ku-pian/"/>
      <url>/2019/12/10/access-shu-ju-ku-pian/</url>
      
        <content type="html"><![CDATA[<p>快要临近高考了专业复习也到最紧张的时刻，我把书上的重要的内容都记录到博客上已方便自己以后可以方便浏览，就当做记笔记了</p><h2>基础知识:</h2><ol><li><p>数据库是存储在计算机内，有组织、可共享的数据集合。其中Access数据库的扩展名为*.mdb</p></li><li><p>数据库管理系统：是位于用户和操作系统之间的一层数据管理软件，它由系统运行控制程序、语言翻译程序和一组公用程序组成。其主要功能包括：数据定义、数据操作、数据库的控制和管理。</p></li><li><p>数据库技术发展主要经历了三种模型：层次模型、网状模型、关系模型。其中层次模型和网状模型统称为非关系模型。现在常用模型为关系模型。</p></li><li><p>在20世纪60年代末期，美国IBM公司开发了第一个商品化的数据库管理系统，在20世纪70年代，商品化关系数据库出现。</p></li></ol><h2>SQL语言代码:</h2>1. 数据查询语句：SELECT；2. 数据操纵语句：INSERT，UPDATE，DELETE；3. 数据定义语句：CREATE，ALTER，DROP；4. 数据控制语句：COMMIT WORK，ROLLBACK WORK；<h3>创建数据库和数据表</h3>1. 创建数据库：CREATE DATABASE 数据库名2. 创建数据表：CREATE TABLE 数据表名（字段1 字段类型 [NOT NULL][primary key],字段2 字段类型 [NOT NULL][primary key],……)<table><thead><tr><th>数据类型</th><th>描述</th></tr></thead><tbody><tr><td>int</td><td>4字节，长型整数</td></tr><tr><td>real</td><td>4字节，单精度浮点值</td></tr><tr><td>Float</td><td>8字节，双精度浮点值</td></tr><tr><td>Char(n)</td><td>参数n省略则默认为255，字符长度不够n个时用空格来不足，超过n个时自动截断</td></tr><tr><td>Varchar(n)</td><td>Varchar(n)的长度为实际输入的字符串的个数，参数n省略则默认为255</td></tr><tr><td>Datetime</td><td>日期型，精确到秒</td></tr><tr><td>Bit</td><td>该字段只能取0或1两个值中的一个，不能为空，就是逻辑值</td></tr></tbody></table><h5>简单查询</h5>select的完整格式:<pre><code>select 字段名 (或者 “ * ”)[from 数据表名称][where 条件表达式][group by 字段名][having 条件表达式][order by 字段名[asc|desc]]</code></pre><p>其中where条件表达式中日期型根据时期的远近比较，近期的比远期的大如2010-10-5 &gt; 2001-10-5，英文字符根据字符的assic编码来比较，汉字根据国标码比较，用like运算符可以查找相似的字符， “ * ” 代表任意个任意字符，“？”代表一个任意字符。</p><h3>聚集函数查询</h3><table><thead><tr><th>函数名称</th><th>函数功能</th></tr></thead><tbody><tr><td>count( )</td><td>统计所选数据的行数</td></tr><tr><td>sum( )</td><td>计算数列的和</td></tr><tr><td>min( )</td><td>查找数列中的最小值</td></tr><tr><td>max( )</td><td>查找数列中的最大值</td></tr><tr><td>avg( )</td><td>计算数列的平均值</td></tr></tbody></table> <h3>其他查询子句</h3><ol><li><p>group by 子句<br>格式：group by 字段名<br>功能：根据字段名，把相同的记录组合成单一记录（简单来说就是合并某字段相同记录）</p></li><li><p>having 子句<br>格式：having 条件表达式<br>功能：having 子句一般用于筛选group by子句聚集过来的数据（简单来说就是在合并某字段相同记录前的条件）</p></li><li><p>order by 子句<br>格式：order by 字段名1 [asc|desc] , 字段名2 [asc|desc]<br>功能：把输出结果按字段名排序，其中asc表示递增排序（就是从小到大），desc表示递减排序（就是从大到小），不填时默认为递增排序（就是从小到大）。</p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 高考复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 高考复习 </tag>
            
            <tag> access数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gal主题的gitment评论系统的创建</title>
      <link href="/2019/12/03/gal-zhu-ti-de-gitment-ping-lun-xi-tong-de-chuang-jian/"/>
      <url>/2019/12/03/gal-zhu-ti-de-gitment-ping-lun-xi-tong-de-chuang-jian/</url>
      
        <content type="html"><![CDATA[<p>一个博客网站怎么能没有评论系统呢，所以今天就在我的好朋友<a href="https://www.impdx.vip" target="_blank" rel="noopener">忧郁的派大星</a>帮助下完成了这个评论系统。</p><p>然而我的博客用的是hexo-gal主题，现在在这里分享如何创建评论系统</p><p>在创建gitment评论系统前你需要有一个github账号，至于github账号的注册就不用我说了。然后在github主页中点击右上角自己的头像选择settings再选择developer settings选项后选择OAuth Apps选项，单击New Oauth App新建</p><p><a href="https://img.fengz.me/images/2019/12/03/BHXL.jpg" target="_blank" rel="noopener"><img src="https://img.fengz.me/images/2019/12/03/BHXL.jpg" alt="BHXL.jpg"></a></p><pre><code>Application name           你app的名字可以随便填写Homepage URL               你github的链接Application description    app描述，可以不写Authorization callback URL 回馈链接，可以与Homepage URL链接相同，我就是一样的</code></pre><p>然后点击Register application完成创建</p><p>2.在你的博客根目录下使用</p><p><code>npm install --save gitment</code></p><p>指令进行gitment的安装，安装完成后打开你主题的配置文件_config.yml</p><pre><code>  comment:    gitment:        owner:   # 必填项, 你的GitHub ID        repo:    # 必填项  你的存储评论的repo        oauth:          client_id: # 必填项          client_secret:  # 必填项          redirect_uri:  # 可以填也可以不填  # 是否使用评论系统  use_comment: true  node_sass:    outputStyle: compressed    precision: 5    sourceComments: false</code></pre><p>repo我则填写了自己的网址，client_id即为下图中的client_id码直接复制粘贴就行client_secret也是一样的写完后保存</p><p><a href="https://img.fengz.me/images/2019/12/04/BZjl.jpg" target="_blank" rel="noopener"><img src="https://img.fengz.me/images/2019/12/04/BZjl.jpg" alt="BZjl.jpg"></a><br>完成以后就只差最后初始化一下就可以了方法很简单只要点击Initialize comments按钮然后登录你的github账号就可以了</p><p>现在我已经更换主题</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 简单教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> 评论系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
