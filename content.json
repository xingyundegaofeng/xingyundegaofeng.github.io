{"meta":{"title":"幸运的高峰","subtitle":"","description":"","author":"xingyundegaofeng","url":"http://xingyundegaofeng.github.io","root":"/"},"pages":[{"title":"about","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"about/index.html","date":"11-27","excerpt":""},{"title":"categories","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"categories/index.html","date":"12-05","excerpt":""},{"title":"friends","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"friends/index.html","date":"12-05","excerpt":""},{"title":"contact","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"contact/index.html","date":"12-05","excerpt":""},{"title":"tags","text":"document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"tags/index.html","date":"12-05","excerpt":""}],"posts":[{"title":"泰拉瑞亚mod整合","text":"整合包介绍 本整合包包含了灾厄(Calamity)，瑟银(Thorium)等众多mod，mod数量已经超出普通tmodloader的内存限制因此需要@Rartrin和@Dradonhunter11大佬的tmodloader 64bt版本，该整合包由我自己整理并有少数汉化，还进行了测试单人游玩当前没有大问题，多人模式还待测试。 游戏截图 注意!!! 内存至少8g,低于8g不敢确定能否流程游玩。 泰拉瑞亚需要正版！！泰拉瑞亚需要正版！！泰拉瑞亚需要正版！！ 当前bug (1) 有重复的一两个NPC且有个卖召唤物的npc不卖召唤物（待解决） (2) 硫磺海可能会直接流到深渊，但并不影响mod剧情的推进。 下载链接 tmodloader64bt原贴： https://forums.terraria.org/index.php?threads/1-3-tmodloader-fna-32bit-64bit-branch-of-tml.75644/ mod整合包：https://pan.baidu.com/s/1vuygMmykO1ckpivTKyGTZw 提取码：zcm7 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"2020/04/13/tai-la-rui-ya-mod-zheng-he/","date":"04-13","excerpt":"","tags":[{"name":"游戏","slug":"游戏","permalink":"http://xingyundegaofeng.github.io/tags/%E6%B8%B8%E6%88%8F/"},{"name":"mod","slug":"mod","permalink":"http://xingyundegaofeng.github.io/tags/mod/"},{"name":"整合","slug":"整合","permalink":"http://xingyundegaofeng.github.io/tags/%E6%95%B4%E5%90%88/"}]},{"title":"数字媒体","text":"快要临近高考了专业复习也到最紧张的时刻，我把书上的重要的内容和自己的小见解记录到博客上已方便自己以后可以方便浏览，就当做记笔记了。 基础知识 媒体是指信息表示和传播的载体。 数字媒体的概念 媒体 媒体类别 概念和简述 感觉媒体 直接用于人的感官（人能直接看到的或感觉到的) 表示媒体 指各种编码比如汉字输入法编码，字符的编码，图像编码等 表现媒体 是人与计算机之间的界面一般指输入输出设备 存储媒体 用来存放表示媒体，如内存条，u盘等 传输媒体 是将媒体从一处传送到另一处的物理载体 多媒体 媒体从形式上又分为文字、声音、图形、图像、动画和视频等 数字媒体 数字媒体是指以二进制数据的形式获取、记录、处理和传播信息的载体，其传播形式采用数字化。 数字媒体技术 数字媒体技术的关键技术包括数据压缩技术、专用芯片、大容量存储器、网络通信技术和流媒体技术 技术类型 概念和简述 数据压缩技术 用来减少数据对空间占用 专用芯片 用来处理大量的数字信号，压缩和解压缩的数字信号处理芯片（DSP） 大容量存储器 用来存储大量的数据 网络通信技术 要充分发挥数字媒体技术，还要依靠网络技术和通信技术 流媒体技术 指的是在internet上采用流式传输技术的连续媒体。 流媒体常见的文件格式有SWF，ASF，WMV，RM，FLV，MOV 数字化图像技术 (1)矢量图 矢量图使用直线和曲线来描述图形其特点是存储量小，改变大小时不会失真，方便填充颜色，但是不能表现色彩层次丰富的逼真图像效果 (2)图像图像是一种位图、点阵图像。位图是用像素点来描述一幅图像，它的基本元素是像素或像素点。位图图像文件一般存储量大，适用于表现含有大量细节的画面。其中BMP文件就是位图图像格式的文件，于矢量图相比位图房大时放大的是每个像素点，所以会失真。 描述图像的参数主要有分辨率、颜色深度和存储容量。 ①分辨率：分辨率是指图像在水平方向与垂直方向的像素点个数。②颜色深度： 颜色深度又称灰度级。当颜色深度为n时颜色总数为2的n次。③存储容量：图像数据容量的计算公式是：水平像素点数 X 垂直像素点数 X 颜色深度 / 8(B) 次计算公式算出来的是 “字节” 如要换算成兆则要除以两个1024换算成GB就除以三个1024. 数据压缩技术 (1) 数据冗余 在不影响或少影响媒体质量前提下尽量设法减少媒体数据中的数据量。 ①空间冗余：静态图像在数字化处理生成点阵图后，很多的相邻的像素有很多是一样或者十分接近的这部分可以进行帧内压缩 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"2019/12/12/shu-zi-mei-ti/","date":"12-12","excerpt":"","tags":[{"name":"高考复习","slug":"高考复习","permalink":"http://xingyundegaofeng.github.io/tags/%E9%AB%98%E8%80%83%E5%A4%8D%E4%B9%A0/"},{"name":"数字媒体","slug":"数字媒体","permalink":"http://xingyundegaofeng.github.io/tags/%E6%95%B0%E5%AD%97%E5%AA%92%E4%BD%93/"}]},{"title":"Access数据库篇","text":"快要临近高考了专业复习也到最紧张的时刻，我把书上的重要的内容都记录到博客上已方便自己以后可以方便浏览，就当做记笔记了 基础知识: 数据库是存储在计算机内，有组织、可共享的数据集合。其中Access数据库的扩展名为*.mdb 数据库管理系统：是位于用户和操作系统之间的一层数据管理软件，它由系统运行控制程序、语言翻译程序和一组公用程序组成。其主要功能包括：数据定义、数据操作、数据库的控制和管理。 数据库技术发展主要经历了三种模型：层次模型、网状模型、关系模型。其中层次模型和网状模型统称为非关系模型。现在常用模型为关系模型。 在20世纪60年代末期，美国IBM公司开发了第一个商品化的数据库管理系统，在20世纪70年代，商品化关系数据库出现。 SQL语言代码: 1. 数据查询语句：SELECT； 2. 数据操纵语句：INSERT，UPDATE，DELETE； 3. 数据定义语句：CREATE，ALTER，DROP； 4. 数据控制语句：COMMIT WORK，ROLLBACK WORK； 创建数据库和数据表 1. 创建数据库：CREATE DATABASE 数据库名 2. 创建数据表：CREATE TABLE 数据表名（字段1 字段类型 [NOT NULL][primary key],字段2 字段类型 [NOT NULL][primary key],……) 数据类型 描述 int 4字节，长型整数 real 4字节，单精度浮点值 Float 8字节，双精度浮点值 Char(n) 参数n省略则默认为255，字符长度不够n个时用空格来不足，超过n个时自动截断 Varchar(n) Varchar(n)的长度为实际输入的字符串的个数，参数n省略则默认为255 Datetime 日期型，精确到秒 Bit 该字段只能取0或1两个值中的一个，不能为空，就是逻辑值 简单查询 select的完整格式: select 字段名 (或者 “ * ”) [from 数据表名称] [where 条件表达式] [group by 字段名] [having 条件表达式] [order by 字段名[asc|desc]]其中where条件表达式中日期型根据时期的远近比较，近期的比远期的大如2010-10-5 &gt; 2001-10-5，英文字符根据字符的assic编码来比较，汉字根据国标码比较，用like运算符可以查找相似的字符， “ * ” 代表任意个任意字符，“？”代表一个任意字符。 聚集函数查询 函数名称 函数功能 count( ) 统计所选数据的行数 sum( ) 计算数列的和 min( ) 查找数列中的最小值 max( ) 查找数列中的最大值 avg( ) 计算数列的平均值 其他查询子句 group by 子句格式：group by 字段名功能：根据字段名，把相同的记录组合成单一记录（简单来说就是合并某字段相同记录） having 子句格式：having 条件表达式功能：having 子句一般用于筛选group by子句聚集过来的数据（简单来说就是在合并某字段相同记录前的条件） order by 子句格式：order by 字段名1 [asc|desc] , 字段名2 [asc|desc]功能：把输出结果按字段名排序，其中asc表示递增排序（就是从小到大），desc表示递减排序（就是从大到小），不填时默认为递增排序（就是从小到大）。 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"2019/12/10/access-shu-ju-ku-pian/","date":"12-10","excerpt":"","tags":[{"name":"高考复习","slug":"高考复习","permalink":"http://xingyundegaofeng.github.io/tags/%E9%AB%98%E8%80%83%E5%A4%8D%E4%B9%A0/"},{"name":"access数据库","slug":"access数据库","permalink":"http://xingyundegaofeng.github.io/tags/access%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"gal主题的gitment评论系统的创建","text":"一个博客网站怎么能没有评论系统呢，所以今天就在我的好朋友忧郁的派大星帮助下完成了这个评论系统。 然而我的博客用的是hexo-gal主题，现在在这里分享如何创建评论系统 在创建gitment评论系统前你需要有一个github账号，至于github账号的注册就不用我说了。然后在github主页中点击右上角自己的头像选择settings再选择developer settings选项后选择OAuth Apps选项，单击New Oauth App新建 Application name 你app的名字可以随便填写 Homepage URL 你github的链接 Application description app描述，可以不写 Authorization callback URL 回馈链接，可以与Homepage URL链接相同，我就是一样的然后点击Register application完成创建 2.在你的博客根目录下使用 npm install --save gitment 指令进行gitment的安装，安装完成后打开你主题的配置文件_config.yml comment: gitment: owner: # 必填项, 你的GitHub ID repo: # 必填项 你的存储评论的repo oauth: client_id: # 必填项 client_secret: # 必填项 redirect_uri: # 可以填也可以不填 # 是否使用评论系统 use_comment: true node_sass: outputStyle: compressed precision: 5 sourceComments: falserepo我则填写了自己的网址，client_id即为下图中的client_id码直接复制粘贴就行client_secret也是一样的写完后保存 完成以后就只差最后初始化一下就可以了方法很简单只要点击Initialize comments按钮然后登录你的github账号就可以了 现在我已经更换主题 document.querySelectorAll('.github-emoji') .forEach(el => { if (!el.dataset.src) { return; } const img = document.createElement('img'); img.style = 'display:none !important;'; img.src = el.dataset.src; img.addEventListener('error', () => { img.remove(); el.style.color = 'inherit'; el.style.backgroundImage = 'none'; el.style.background = 'none'; }); img.addEventListener('load', () => { img.remove(); }); document.body.appendChild(img); });","path":"2019/12/03/gal-zhu-ti-de-gitment-ping-lun-xi-tong-de-chuang-jian/","date":"12-03","excerpt":"","tags":[{"name":"教程","slug":"教程","permalink":"http://xingyundegaofeng.github.io/tags/%E6%95%99%E7%A8%8B/"},{"name":"评论系统","slug":"评论系统","permalink":"http://xingyundegaofeng.github.io/tags/%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"},{"name":"hexo","slug":"hexo","permalink":"http://xingyundegaofeng.github.io/tags/hexo/"}]}]}